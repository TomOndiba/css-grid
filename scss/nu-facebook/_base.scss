
// Colour 

// Mid Blue (modal box): #355e98
// Dark Blue (modal box footer, text fields): #2b4673
// Light Blue (Login button: #377bd5) !with gradient
// White (text): white !using opacity

$darkblue: #2b4673;
$midblue: #355e98;
$lightblue: #377bd5;
$darkgrey: #1d1e23;
$lightgrey: #2a2931;

$messageBoxAction: #e9eaef;

// ==Typefaces

@font-face {
	font-family: 'heydings_iconsregular';
	src: url('../../type/heydings_icons-webfont.eot');
	src: url('../../type/heydings_icons-webfont.eot?#iefix') format('embedded-opentype'),
	url('../../type/heydings_icons-webfont.woff') format('woff'),
	url('../../type/heydings_icons-webfont.ttf') format('truetype'),
	url('../../type/heydings_icons-webfont.svg#heydings_iconsregular') format('svg');
	font-weight: normal;
	font-style: normal;
}

@font-face {
	font-family: 'pt_sansregular';
	src: url('../../type/pts55f-webfont.eot');
	src: url('../../type/pts55f-webfont.eot?#iefix') format('embedded-opentype'),
	url('../../type/pts55f-webfont.woff') format('woff'),
	url('../../type/pts55f-webfont.ttf') format('truetype'),
	url('../../type/pts55f-webfont.svg#pt_sansregular') format('svg');
	font-weight: normal;
	font-style: normal;
}

body {
	font-family: pt_sansregular, sans-serif;
	font-style: normal;
	color: white;
	text-rendering: optimizeLegibility;
}

// Breakpoints

@mixin breakpoint($point) {

	@if $point == large {
		@media (min-width: 37.50em) { @content }
	}

	@else if $point == huge {
		@media (min-width: 59.125em) { @content }
	}
}

// Base image & video styles

@mixin responsiveImages {
	img,object,embed {
		max-width: 100%;
		margin: 0;
		padding: 0;
	}
}

@mixin responsiveImagesMobile {
	img,object,embed {
		width: 100%;
		margin: 0;
		padding: 0;
	}
}

video {
	width: 100% !important;
	height: auto !important;	
}

div, header, main, footer {
	margin: 0;
	padding: 0;
}

// ==Type styles

@mixin iconFont {
	font-family:'heydings_iconsregular';
}

.headLine {
	font-size: 1.5rem;
	padding: 0;
	margin: 0;
}

.typeLarger {
	font-size: 1.1rem;
}

.typeSmaller {
	font-size: 0.9rem;
}

.typeSmallest {
	font-size: 0.5rem;
}

.blueText {
	color: $darkblue;
}

// ==Colour adjustments

@mixin hoverOver {
	&:hover {
		opacity: .5;
	}
}

@mixin darkenObject {
	opacity: 0.5;
}

// ==Box Model type

* { @include box-sizing(border-box); }

// ==Floats & Hiding Elements

.right {
	float: right;
}

.cf:before,
.cf:after {
	content:"";
	display: table;
}
.cf:after {
	clear: both;
}

@mixin imageReplace {
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}

*[hidden] {
	display: none;
}

// ==Logo & Buttons

a:focus, a:active, 
button::-moz-focus-inner,
input[type="reset"]::-moz-focus-inner,
input[type="button"]::-moz-focus-inner,
input[type="submit"]::-moz-focus-inner,
select::-moz-focus-inner,
input[type="file"] > input[type="button"]::-moz-focus-inner {
    border: 0;
    outline : 0;
}

.logo {
	@include imageReplace;
	margin: 0;
	padding: 0;
	background: url(../img/nav/fb_logo.svg) no-repeat;
}

// ==Flexbox Mixins

// Flex Containers

@mixin flexContainer {
	display: -webkit-box;   
	display: -ms-flexbox;   
	display: -webkit-flex;  
	display: flex;   
} 

@mixin flexInline {
	display: -webkit-inline-box;
	display: -ms-inline-flexbox;
	display: -webkit-inline-flex;
	display: inline-flex;
}

// Main Axis Orientation and Direction

@mixin flexColumn {
	-webkit-box-orient: vertical;
	-ms-flex-direction: column;
	-webkit-flex-direction: column;
	flex-direction: column;
}

@mixin flexRow {
	-webkit-box-orient: horizontal;
	-ms-flex-direction: row;
	-webkit-flex-direction: row;
	flex-direction: row;
}

// No wrapping onto multiple lines

@mixin flexNoWrap {
	-webkit-box-lines: single;
	-ms-flex-wrap: none;
	-webkit-flex-wrap: nowrap;
	flex-wrap: nowrap 
}

// Change Display Order

@mixin flexOrder($order) {
	-webkit-box-ordinal-group: $order;
	-webkit-order: $order;
	-ms-flex-order: $order;
	order: $order;
}

// Flexibility

@mixin flexGrow($flexGrow) {
	-webkit-box-flex: $flexGrow;
	-webkit-flex: $flexGrow;
	-ms-flex: $flexGrow;
	flex: $flexGrow;
}

@mixin flexAlignSelf {
	-webkit-align-self: stretch;
	-ms-flex-item-align: stretch;
	align-self: stretch;
}

@mixin flexAlignSelfCenter {
	-webkit-align-self: center;
	-ms-flex-item-align: center;
	align-self: center;
}

@mixin flexAlignSelfEnd {
	-webkit-align-self: flex-end;
	-ms-flex-item-align: flex-end;
	align-self: flex-end;
}

// Main Axis Alignment

@mixin flexJustify($position) {
	-webkit-box-pack: $position; 
	-ms-flex-pack: $position; 
	-webkit-justify-content: $position;
	justify-content: $position;
}

@mixin flexSpaceAround {
	-webkit-box-pack: justify; 
	-ms-flex-pack: justify; 
	-webkit-justify-content: space-around;
	justify-content: space-around;
}

@mixin flexSpaceBetween {
	-webkit-box-pack: justify; 
	-ms-flex-pack: justify; 
	-webkit-justify-content: space-between;
	justify-content: space-between;
}

// Cross Axis Alignment

@mixin flexAlign($position) {
	-webkit-box-align: $position; 
	-ms-flex-align: $position;
	-webkit-align-items: $position;
	align-items: $position;
}

// Cross Axis Alignment for Space Distribution 

@mixin CrossAxisDistribution {
	-ms-flex-line-pack: $position;
	-webkit-align-content: $position;
	align-content: $position;
}

// ==Grid

.flexContainer {
	@include flexContainer;
}

.flexContainerInline {
	@include flexInline;
}

.flexRow {
	@include flexRow;
}

.flexColumn {
	@include flexColumn;
}

.flexCenter {
	@include flexAlign(center);
}

.flexBaseline {
	@include flexAlign(baseline);
}

.flexCenter {
	@include flexAlign(center);
	@include flexJustify(center);
	text-align: center;
}

.flexStart {
	-webkit-box-pack: start; 
	-ms-flex-pack: start; 
	-webkit-justify-content: flex-start;
	justify-content: flex-start;
}

.flexEnd {
	-webkit-box-pack: end; 
	-ms-flex-pack: end; 
	-webkit-justify-content: flex-end;
	justify-content: flex-end;
}

.flexSpaceBetween {
	-webkit-box-pack: justify; 
	-ms-flex-pack: justify; 
	-webkit-justify-content: space-around;
	justify-content: space-between;
}


